{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { BooksApiActions } from './books.actions';\nimport { catchError, exhaustMap, map } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../book-list/books.service\";\nexport class BooksEffects {\n  constructor(actions$, booksService$) {\n    this.actions$ = actions$;\n    this.booksService$ = booksService$;\n    this.loadBooks$ = createEffect(() => this.actions$.pipe(ofType(BooksApiActions.loadBooks), exhaustMap(() => this.booksService$.getBooks().pipe(map(books => BooksApiActions.retrievedBookList({\n      books\n    })), catchError(error => of(BooksApiActions.errorLoading({\n      errorMsg: error.message\n    })))))));\n  }\n  static #_ = this.ɵfac = function BooksEffects_Factory(t) {\n    return new (t || BooksEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.GoogleBooksService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BooksEffects,\n    factory: BooksEffects.ɵfac\n  });\n}","map":{"version":3,"names":["createEffect","ofType","BooksApiActions","catchError","exhaustMap","map","of","BooksEffects","constructor","actions$","booksService$","loadBooks$","pipe","loadBooks","getBooks","books","retrievedBookList","error","errorLoading","errorMsg","message","_","i0","ɵɵinject","i1","Actions","i2","GoogleBooksService","_2","factory","ɵfac"],"sources":["/home/Matrix920/ngrx-store-effects/src/app/state/books.effects.ts"],"sourcesContent":["\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { GoogleBooksService } from '../book-list/books.service';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { BooksApiActions } from './books.actions';\r\nimport { catchError, exhaustMap, map } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class BooksEffects {\r\n \r\n  loadBooks$ = createEffect(() =>  \r\n    this.actions$.pipe(\r\n        ofType(BooksApiActions.loadBooks),\r\n        exhaustMap(() => this.booksService$.getBooks()\r\n          .pipe(\r\n              map(books => BooksApiActions.retrievedBookList({books})),\r\n              catchError((error: {message: string}) => \r\n                of(BooksApiActions.errorLoading({errorMsg: error.message})))\r\n          ))\r\n      ))\r\n    \r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private booksService$: GoogleBooksService){\r\n    }\r\n\r\n}"],"mappings":"AACA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAG7D,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,UAAU,EAAEC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;AAC5D,SAASC,EAAE,QAAQ,MAAM;;;;AAGzB,OAAM,MAAOC,YAAY;EAcvBC,YACUC,QAAiB,EACjBC,aAAiC;IADjC,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,aAAa,GAAbA,aAAa;IAdvB,KAAAC,UAAU,GAAGX,YAAY,CAAC,MACxB,IAAI,CAACS,QAAQ,CAACG,IAAI,CACdX,MAAM,CAACC,eAAe,CAACW,SAAS,CAAC,EACjCT,UAAU,CAAC,MAAM,IAAI,CAACM,aAAa,CAACI,QAAQ,EAAE,CAC3CF,IAAI,CACDP,GAAG,CAACU,KAAK,IAAIb,eAAe,CAACc,iBAAiB,CAAC;MAACD;IAAK,CAAC,CAAC,CAAC,EACxDZ,UAAU,CAAEc,KAAwB,IAClCX,EAAE,CAACJ,eAAe,CAACgB,YAAY,CAAC;MAACC,QAAQ,EAAEF,KAAK,CAACG;IAAO,CAAC,CAAC,CAAC,CAAC,CACjE,CAAC,CACL,CAAC;EAMJ;EAAC,QAAAC,CAAA,G;qBAjBQd,YAAY,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,kBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZrB,YAAY;IAAAsB,OAAA,EAAZtB,YAAY,CAAAuB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}